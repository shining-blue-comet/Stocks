/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MetaStocksCompany,
  MetaStocksCompanyInterface,
} from "../MetaStocksCompany";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001c62000022565b62000152565b6200002e60ff62000031565b50565b60008054610100900460ff1615620000ca578160ff1660011480156200006a575062000068306200014360201b62000a651760201c565b155b620000c25760405162461bcd60e51b815260206004820152602e602482015260008051602062001d2283398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b506000919050565b60005460ff808416911610620001295760405162461bcd60e51b815260206004820152602e602482015260008051602062001d2283398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620000b9565b506000805460ff191660ff92909216919091179055600190565b6001600160a01b03163b151590565b611bc080620001626000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b857806395d89b411161007c57806395d89b4114610259578063a22cb46514610261578063b88d4fde14610274578063c87b56dd14610287578063e985e9c51461029a578063f2fde38b146102ad57600080fd5b806370a0823114610226578063715018a6146102395780638129fc1c146102415780638456cb59146102495780638da5cb5b1461025157600080fd5b80633f4ba83a116100ff5780633f4ba83a146101cc57806340d097c3146101d457806342842e0e146101f55780635c975abb146102085780636352211e1461021357600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a457806323b872dd146101b9575b600080fd5b61014f61014a3660046115e0565b6102c0565b60405190151581526020015b60405180910390f35b61016c610312565b60405161015b9190611655565b61018c610187366004611668565b6103a4565b6040516001600160a01b03909116815260200161015b565b6101b76101b2366004611698565b610431565b005b6101b76101c73660046116c2565b610541565b6101b7610572565b6101e76101e23660046116fe565b6105ab565b60405190815260200161015b565b6101b76102033660046116c2565b610609565b60975460ff1661014f565b61018c610221366004611668565b610624565b6101e76102343660046116fe565b61069b565b6101b7610722565b6101b761075b565b6101b7610826565b61018c61085d565b61016c61086c565b6101b761026f366004611719565b61087b565b6101b761028236600461176b565b61088a565b61016c610295366004611668565b6108c2565b61014f6102a8366004611847565b61099a565b6101b76102bb3660046116fe565b6109c8565b60006001600160e01b031982166380ac58cd60e01b14806102f157506001600160e01b03198216635b5e139f60e01b145b8061030c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606580546103219061187a565b80601f016020809104026020016040519081016040528092919081815260200182805461034d9061187a565b801561039a5780601f1061036f5761010080835404028352916020019161039a565b820191906000526020600020905b81548152906001019060200180831161037d57829003601f168201915b5050505050905090565b60006103af82610a74565b6104155760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b600061043c82610624565b9050806001600160a01b0316836001600160a01b0316036104a95760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161040c565b336001600160a01b03821614806104c557506104c5813361099a565b6105325760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b606482015260840161040c565b61053c8383610a91565b505050565b61054b3382610aff565b6105675760405162461bcd60e51b815260040161040c906118b4565b61053c838383610bc9565b3361057b61085d565b6001600160a01b0316146105a15760405162461bcd60e51b815260040161040c90611905565b6105a9610d70565b565b6000336105b661085d565b6001600160a01b0316146105dc5760405162461bcd60e51b815260040161040c90611905565b60006105e760fb5490565b90506105f760fb80546001019055565b6106018382610e03565b90505b919050565b61053c8383836040518060200160405280600081525061088a565b6000818152606760205260408120546001600160a01b0316806106015760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161040c565b60006001600160a01b0382166107065760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161040c565b506001600160a01b031660009081526068602052604090205490565b3361072b61085d565b6001600160a01b0316146107515760405162461bcd60e51b815260040161040c90611905565b6105a96000610e1d565b60006107676001610e6f565b9050801561077f576000805461ff0019166101001790555b6107cd604051806040016040528060118152602001704d65746153746f636b73436f6d70616e7960781b815250604051806040016040528060038152602001624d534360e81b815250610efe565b6107d5610f2f565b6107dd610f5e565b8015610823576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b3361082f61085d565b6001600160a01b0316146108555760405162461bcd60e51b815260040161040c90611905565b6105a9610f8d565b60c9546001600160a01b031690565b6060606680546103219061187a565b610886338383610fe5565b5050565b6108943383610aff565b6108b05760405162461bcd60e51b815260040161040c906118b4565b6108bc848484846110af565b50505050565b60606108cd82610a74565b6109315760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161040c565b600061094860408051602081019091526000815290565b905060008151116109685760405180602001604052806000815250610993565b80610972846110e2565b60405160200161098392919061193a565b6040516020818303038152906040525b9392505050565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b336109d161085d565b6001600160a01b0316146109f75760405162461bcd60e51b815260040161040c90611905565b6001600160a01b038116610a5c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161040c565b61082381610e1d565b6001600160a01b03163b151590565b6000908152606760205260409020546001600160a01b0316151590565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ac682610624565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610b0a82610a74565b610b6b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161040c565b6000610b7683610624565b9050806001600160a01b0316846001600160a01b03161480610b9d5750610b9d818561099a565b80610bc15750836001600160a01b0316610bb6846103a4565b6001600160a01b0316145b949350505050565b826001600160a01b0316610bdc82610624565b6001600160a01b031614610c405760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161040c565b6001600160a01b038216610ca25760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161040c565b610cad8383836111e3565b610cb8600082610a91565b6001600160a01b0383166000908152606860205260408120805460019290610ce190849061197f565b90915550506001600160a01b0382166000908152606860205260408120805460019290610d0f908490611996565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60975460ff16610db95760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161040c565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b610886828260405180602001604052806000815250611206565b60c980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff1615610ebd578160ff166001148015610e995750610e9730610a65565b155b610eb55760405162461bcd60e51b815260040161040c906119ae565b506000919050565b60005460ff808416911610610ee45760405162461bcd60e51b815260040161040c906119ae565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff16610f255760405162461bcd60e51b815260040161040c906119fc565b6108868282611239565b600054610100900460ff16610f565760405162461bcd60e51b815260040161040c906119fc565b6105a9611287565b600054610100900460ff16610f855760405162461bcd60e51b815260040161040c906119fc565b6105a96112ba565b60975460ff1615610fb05760405162461bcd60e51b815260040161040c90611a47565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610de63390565b816001600160a01b0316836001600160a01b0316036110425760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b604482015260640161040c565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6110ba848484610bc9565b6110c6848484846112ea565b6108bc5760405162461bcd60e51b815260040161040c90611a71565b6060816000036111095750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611133578061111d81611ac3565b915061112c9050600a83611af2565b915061110d565b60008167ffffffffffffffff81111561114e5761114e611755565b6040519080825280601f01601f191660200182016040528015611178576020820181803683370190505b5090505b8415610bc15761118d60018361197f565b915061119a600a86611b06565b6111a5906030611996565b60f81b8183815181106111ba576111ba611b1a565b60200101906001600160f81b031916908160001a9053506111dc600a86611af2565b945061117c565b60975460ff161561053c5760405162461bcd60e51b815260040161040c90611a47565b61121083836113f2565b61121d60008484846112ea565b61053c5760405162461bcd60e51b815260040161040c90611a71565b600054610100900460ff166112605760405162461bcd60e51b815260040161040c906119fc565b8151611273906065906020850190611531565b50805161053c906066906020840190611531565b600054610100900460ff166112ae5760405162461bcd60e51b815260040161040c906119fc565b6097805460ff19169055565b600054610100900460ff166112e15760405162461bcd60e51b815260040161040c906119fc565b6105a933610e1d565b60006112fe846001600160a01b0316610a65565b156113e757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611335903390899088908890600401611b30565b6020604051808303816000875af1925050508015611370575060408051601f3d908101601f1916820190925261136d91810190611b6d565b60015b6113cd573d80801561139e576040519150601f19603f3d011682016040523d82523d6000602084013e6113a3565b606091505b5080516000036113c55760405162461bcd60e51b815260040161040c90611a71565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610bc1565b506001949350505050565b6001600160a01b0382166114485760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161040c565b61145181610a74565b1561149e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161040c565b6114aa600083836111e3565b6001600160a01b03821660009081526068602052604081208054600192906114d3908490611996565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461153d9061187a565b90600052602060002090601f01602090048101928261155f57600085556115a5565b82601f1061157857805160ff19168380011785556115a5565b828001600101855582156115a5579182015b828111156115a557825182559160200191906001019061158a565b506115b19291506115b5565b5090565b5b808211156115b157600081556001016115b6565b6001600160e01b03198116811461082357600080fd5b6000602082840312156115f257600080fd5b8135610993816115ca565b60005b83811015611618578181015183820152602001611600565b838111156108bc5750506000910152565b600081518084526116418160208601602086016115fd565b601f01601f19169290920160200192915050565b6020815260006109936020830184611629565b60006020828403121561167a57600080fd5b5035919050565b80356001600160a01b038116811461060457600080fd5b600080604083850312156116ab57600080fd5b6116b483611681565b946020939093013593505050565b6000806000606084860312156116d757600080fd5b6116e084611681565b92506116ee60208501611681565b9150604084013590509250925092565b60006020828403121561171057600080fd5b61099382611681565b6000806040838503121561172c57600080fd5b61173583611681565b91506020830135801515811461174a57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561178157600080fd5b61178a85611681565b935061179860208601611681565b925060408501359150606085013567ffffffffffffffff808211156117bc57600080fd5b818701915087601f8301126117d057600080fd5b8135818111156117e2576117e2611755565b604051601f8201601f19908116603f0116810190838211818310171561180a5761180a611755565b816040528281528a602084870101111561182357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561185a57600080fd5b61186383611681565b915061187160208401611681565b90509250929050565b600181811c9082168061188e57607f821691505b6020821081036118ae57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000835161194c8184602088016115fd565b8351908301906119608183602088016115fd565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561199157611991611969565b500390565b600082198211156119a9576119a9611969565b500190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060018201611ad557611ad5611969565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611b0157611b01611adc565b500490565b600082611b1557611b15611adc565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611b6390830184611629565b9695505050505050565b600060208284031215611b7f57600080fd5b8151610993816115ca56fea2646970667358221220eaa8e5f6df0c61574ed03c8a6b4e49086420fd3edda63f9810ac21b50eb3b87864736f6c634300080e0033496e697469616c697a61626c653a20636f6e747261637420697320616c726561";

export class MetaStocksCompany__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MetaStocksCompany> {
    return super.deploy(overrides || {}) as Promise<MetaStocksCompany>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MetaStocksCompany {
    return super.attach(address) as MetaStocksCompany;
  }
  connect(signer: Signer): MetaStocksCompany__factory {
    return super.connect(signer) as MetaStocksCompany__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetaStocksCompanyInterface {
    return new utils.Interface(_abi) as MetaStocksCompanyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetaStocksCompany {
    return new Contract(address, _abi, signerOrProvider) as MetaStocksCompany;
  }
}
