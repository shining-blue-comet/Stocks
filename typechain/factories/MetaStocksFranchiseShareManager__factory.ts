/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MetaStocksFranchiseShareManager,
  MetaStocksFranchiseShareManagerInterface,
} from "../MetaStocksFranchiseShareManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "companyId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "franchiseId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnMetaStocksFranchiseShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "companyId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "franchiseId",
        type: "uint256",
      },
    ],
    name: "createMetaStocksFranchiseShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "franchisesShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "companyId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "franchiseId",
        type: "uint256",
      },
    ],
    name: "getNumberOfMetaStocksFranchiseShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_metaStocksFranchiseAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "self",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "companyId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "franchiseId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sellMetaStocksFranchiseShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611626806100206000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80638da5cb5b116100c3578063be184d9e1161007c578063be184d9e14610321578063c1f5240414610334578063c4d66de814610347578063dd62ed3e1461035a578063f23a6e611461036d578063f2fde38b1461038c57600080fd5b80638da5cb5b1461027f57806395d89b4114610290578063a457c2d714610298578063a9059cbb146102ab578063aca9a5b4146102be578063bc197c81146102e957600080fd5b8063395093511161011557806339509351146101e157806349389870146101f4578063504eff751461021f57806370a08231146102345780637104ddb21461025d578063715018a61461027757600080fd5b806301ffc9a71461015d57806306fdde0314610185578063095ea7b31461019a57806318160ddd146101ad57806323b872dd146101bf578063313ce567146101d2575b600080fd5b61017061016b366004610f5a565b61039f565b60405190151581526020015b60405180910390f35b61018d6103b0565b60405161017c9190610f8b565b6101706101a8366004610ff7565b610442565b6035545b60405190815260200161017c565b6101706101cd366004611021565b61045a565b6040516012815260200161017c565b6101706101ef366004610ff7565b61047e565b6101b161020236600461105d565b609c60209081526000928352604080842090915290825290205481565b61023261022d36600461107f565b6104a0565b005b6101b16102423660046110ab565b6001600160a01b031660009081526033602052604090205490565b305b6040516001600160a01b03909116815260200161017c565b6102326105c1565b6065546001600160a01b031661025f565b61018d6105f7565b6101706102a6366004610ff7565b610606565b6101706102b9366004610ff7565b610681565b6101b16102cc36600461105d565b6000918252609c6020908152604080842092845291905290205490565b6103086102f73660046111fd565b63bc197c8160e01b95945050505050565b6040516001600160e01b0319909116815260200161017c565b61023261032f3660046112a7565b61068f565b61023261034236600461107f565b61072e565b6102326103553660046110ab565b610816565b6101b16103683660046112da565b6109b4565b61030861037b36600461130d565b63f23a6e6160e01b95945050505050565b61023261039a3660046110ab565b6109df565b60006103aa82610a7a565b92915050565b6060603680546103bf90611372565b80601f01602080910402602001604051908101604052809291908181526020018280546103eb90611372565b80156104385780601f1061040d57610100808354040283529160200191610438565b820191906000526020600020905b81548152906001019060200180831161041b57829003601f168201915b5050505050905090565b600033610450818585610aaf565b5060019392505050565b600033610468858285610bd3565b610473858585610c4d565b506001949350505050565b60003361045081858561049183836109b4565b61049b91906113c2565b610aaf565b6000838152609c602090815260408083208584529091529020548111156104e25760405162461bcd60e51b81526004016104d9906113da565b60405180910390fd5b6000838152609c60209081526040808320858452909152812054610507908390611411565b10156105255760405162461bcd60e51b81526004016104d990611428565b6000838152609c602090815260408083208584529091528120805483929061054e908490611411565b9091555050609754604051637921219560e11b81526001600160a01b039091169063f242432a9061058a90309033906001908790600401611488565b600060405180830381600087803b1580156105a457600080fd5b505af11580156105b8573d6000803e3d6000fd5b50505050505050565b6065546001600160a01b031633146105eb5760405162461bcd60e51b81526004016104d9906114cb565b6105f56000610e1b565b565b6060603780546103bf90611372565b6000338161061482866109b4565b9050838110156106745760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104d9565b6104738286868403610aaf565b600033610450818585610c4d565b609754604051630fbfeffd60e11b81526001600160a01b0390911690631f7fdffa906106c5908690609a90609b90600401611540565b600060405180830381600087803b1580156106df57600080fd5b505af11580156106f3573d6000803e3d6000fd5b50506099546000858152609c60209081526040808320878452909152812080549294509250906107249084906113c2565b9091555050505050565b6000838152609c602090815260408083208584529091529020548111156107675760405162461bcd60e51b81526004016104d9906113da565b6000838152609c6020908152604080832085845290915281205461078c908390611411565b10156107aa5760405162461bcd60e51b81526004016104d990611428565b6000838152609c60209081526040808320858452909152812080548392906107d3908490611411565b9091555050609754604051630dc5ff8760e41b815233600482015260248101849052604481018390526001600160a01b039091169063dc5ff8709060640161058a565b60006108226001610e6d565b9050801561083a576000805461ff0019166101001790555b6064609981905560408051828152610ca081019091529060208201610c80803683375050815161087192609a925060200190610efa565b5060995467ffffffffffffffff81111561088d5761088d6110c6565b6040519080825280602002602001820160405280156108b6578160200160208202803683370190505b5080516108cb91609b91602090910190610efa565b5060005b60995481101561094e57609a8054600181810190925560007f44da158ba27f9252712a74ff6a55c5d531f69609f1f6e7f17c4443a8e2089be4909101819055609b8054808401825591527fbba9db4cdbea0a37c207bbb83e20f828cd4441c49891101dc94fd20dc8efc34901558061094681611589565b9150506108cf565b50609780546001600160a01b0319166001600160a01b03841617905580156109b0576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6065546001600160a01b03163314610a095760405162461bcd60e51b81526004016104d9906114cb565b6001600160a01b038116610a6e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d9565b610a7781610e1b565b50565b60006001600160e01b03198216630271189760e51b14806103aa57506301ffc9a760e01b6001600160e01b03198316146103aa565b6001600160a01b038316610b115760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104d9565b6001600160a01b038216610b725760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104d9565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610bdf84846109b4565b90506000198114610c475781811015610c3a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104d9565b610c478484848403610aaf565b50505050565b6001600160a01b038316610cb15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104d9565b6001600160a01b038216610d135760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104d9565b6001600160a01b03831660009081526033602052604090205481811015610d8b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104d9565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610dc29084906113c2565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e0e91815260200190565b60405180910390a3610c47565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff1615610eb4578160ff166001148015610e905750303b155b610eac5760405162461bcd60e51b81526004016104d9906115a2565b506000919050565b60005460ff808416911610610edb5760405162461bcd60e51b81526004016104d9906115a2565b506000805460ff191660ff92909216919091179055600190565b919050565b828054828255906000526020600020908101928215610f35579160200282015b82811115610f35578251825591602001919060010190610f1a565b50610f41929150610f45565b5090565b5b80821115610f415760008155600101610f46565b600060208284031215610f6c57600080fd5b81356001600160e01b031981168114610f8457600080fd5b9392505050565b600060208083528351808285015260005b81811015610fb857858101830151858201604001528201610f9c565b81811115610fca576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610ef557600080fd5b6000806040838503121561100a57600080fd5b61101383610fe0565b946020939093013593505050565b60008060006060848603121561103657600080fd5b61103f84610fe0565b925061104d60208501610fe0565b9150604084013590509250925092565b6000806040838503121561107057600080fd5b50508035926020909101359150565b60008060006060848603121561109457600080fd5b505081359360208301359350604090920135919050565b6000602082840312156110bd57600080fd5b610f8482610fe0565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611105576111056110c6565b604052919050565b600082601f83011261111e57600080fd5b8135602067ffffffffffffffff82111561113a5761113a6110c6565b8160051b6111498282016110dc565b928352848101820192828101908785111561116357600080fd5b83870192505b8483101561118257823582529183019190830190611169565b979650505050505050565b600082601f83011261119e57600080fd5b813567ffffffffffffffff8111156111b8576111b86110c6565b6111cb601f8201601f19166020016110dc565b8181528460208386010111156111e057600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561121557600080fd5b61121e86610fe0565b945061122c60208701610fe0565b9350604086013567ffffffffffffffff8082111561124957600080fd5b61125589838a0161110d565b9450606088013591508082111561126b57600080fd5b61127789838a0161110d565b9350608088013591508082111561128d57600080fd5b5061129a8882890161118d565b9150509295509295909350565b6000806000606084860312156112bc57600080fd5b6112c584610fe0565b95602085013595506040909401359392505050565b600080604083850312156112ed57600080fd5b6112f683610fe0565b915061130460208401610fe0565b90509250929050565b600080600080600060a0868803121561132557600080fd5b61132e86610fe0565b945061133c60208701610fe0565b93506040860135925060608601359150608086013567ffffffffffffffff81111561136657600080fd5b61129a8882890161118d565b600181811c9082168061138657607f821691505b6020821081036113a657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156113d5576113d56113ac565b500190565b6020808252601c908201527f4275726e206578636564656420736861726520616c6c6f77616e636500000000604082015260600190565b600082821015611423576114236113ac565b500390565b6020808252602a908201527f42616c616e6365206166746572206275726e2063616e74206265206c6f776572604082015269207468616e207a65726f60b01b606082015260800190565b600381526203078360ec1b602082015260400190565b6001600160a01b03858116825284166020820152604081018390526060810182905260a0608082018190526000906114c1908301611472565b9695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000815480845260208085019450836000528060002060005b8381101561153557815487529582019560019182019101611519565b509495945050505050565b6001600160a01b038416815260806020820181905260009061156490830185611500565b82810360408401526115768185611500565b905082810360608401526114c181611472565b60006001820161159b5761159b6113ac565b5060010190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b60608201526080019056fea26469706673582212204c499e703729fa061c157c4da8b0b430738469183dba63edbd399856df42014364736f6c634300080e0033";

export class MetaStocksFranchiseShareManager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MetaStocksFranchiseShareManager> {
    return super.deploy(
      overrides || {}
    ) as Promise<MetaStocksFranchiseShareManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MetaStocksFranchiseShareManager {
    return super.attach(address) as MetaStocksFranchiseShareManager;
  }
  connect(signer: Signer): MetaStocksFranchiseShareManager__factory {
    return super.connect(signer) as MetaStocksFranchiseShareManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetaStocksFranchiseShareManagerInterface {
    return new utils.Interface(
      _abi
    ) as MetaStocksFranchiseShareManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetaStocksFranchiseShareManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MetaStocksFranchiseShareManager;
  }
}
